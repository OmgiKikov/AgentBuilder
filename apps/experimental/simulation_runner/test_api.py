#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Rowboat API
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
current_dir = os.path.dirname(os.path.abspath(__file__))
if current_dir not in sys.path:
    sys.path.insert(0, current_dir)

from db import get_collection

def test_rowboat_api():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç Rowboat API –Ω–∞–ø—Ä—è–º—É—é
    """
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rowboat API...")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ runtime.json
    project_id = "5212767e-dadc-49b7-860f-38fa6197c4a2"
    workflow_id = "684813acaef1e0382f855c9b"
    
    # –ü–æ–ª—É—á–∞–µ–º API key
    api_keys_collection = get_collection('api_keys')
    api_key_doc = api_keys_collection.find_one({"projectId": project_id})
    
    if not api_key_doc:
        print(f"‚ùå API key –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ {project_id}")
        return
    
    api_key = api_key_doc['key']
    print(f"‚úÖ API key –Ω–∞–π–¥–µ–Ω: {api_key[:20]}...")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    url = f"http://127.0.0.1:3000/api/v1/{project_id}/chat"
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {api_key}"
    }
    
    payload = {
        "messages": [
            {
                "role": "user",
                "content": "–£–∑–Ω–∞–π –∫—Ç–æ —Å–∏–¥–∏—Ç –≤ –∂—ë–ª—Ç–æ–º –¥–æ–º–µ?"
            }
        ],
        "state": None,
        "skipToolCalls": False,
        "maxTurns": 3,
        "workflowId": workflow_id
    }
    
    print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫: {url}")
    print(f"üì§ Headers: {headers}")
    print(f"üì§ Payload: {json.dumps(payload, indent=2)}")
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=100)
        print(f"üì• –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üì• Headers: {dict(response.headers)}")
        
        if response.status_code == 200:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

if __name__ == "__main__":
    test_rowboat_api() 