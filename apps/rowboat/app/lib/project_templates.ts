import { WorkflowTemplate } from "./types/workflow_types";
import { z } from 'zod';

const DEFAULT_MODEL = process.env.PROVIDER_DEFAULT_MODEL || "gpt-4.1";

export const templates: { [key: string]: z.infer<typeof WorkflowTemplate> } = {
    // Default template
    'default': {
        name: 'Blank Template',
        description: 'A blank canvas to build your agents.',
        startAgent: "Example Agent",
        agents: [
            {
                name: "Example Agent",
                type: "conversation",
                description: "An example agent",
                instructions: "## üßë‚Äç Role:\nYou are an helpful customer support assistant\n\n---\n## ‚öôÔ∏è Steps to Follow:\n1. Ask the user what they would like help with\n2. Ask the user for their email address and let them know someone will contact them soon.\n\n---\n## üéØ Scope:\n‚úÖ In Scope:\n- Asking the user their issue\n- Getting their email\n\n‚ùå Out of Scope:\n- Questions unrelated to customer support\n- If a question is out of scope, politely inform the user and avoid providing an answer.\n\n---\n## üìã Guidelines:\n‚úîÔ∏è Dos:\n- ask user their issue\n\n‚ùå Don'ts:\n- don't ask user any other detail than email",
                model: DEFAULT_MODEL,
                toggleAble: true,
                ragReturnType: "chunks",
                ragK: 3,
                controlType: "retain",
                outputVisibility: "user_facing",
            },
        ],
        prompts: [],
        tools: [
            {
                "name": "web_search",
                "description": "Fetch information from the web based on chat context",
                "parameters": {
                    "type": "object",
                    "properties": {},
                    "required": []
                },
                "isLibrary": true
            },
            {
                "name": "rag_search",
                "description": "Fetch articles with knowledge relevant to the query",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query": {
                            "type": "string",
                            "description": "The query to retrieve articles for"
                        }
                    },
                    "required": [
                        "query"
                    ]
                },
                "isLibrary": true
            }
        ],
        
    }
}

export const starting_copilot_prompts: { [key: string]: string } = {
    "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º": "–°–æ–∑–¥–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å –∫—Ä–µ–¥–∏—Ç–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏, —Ç–∞–∫–∏–º–∏ –∫–∞–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞—Ä—Ç–∞–º, –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞, –±–æ–Ω—É—Å—ã, –ø—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏ –æ–±—â–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é –∏ –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω.",

    "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –≤—Å—Ç—Ä–µ—á": "–°–æ–∑–¥–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –≤—Å—Ç—Ä–µ—á, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å, –∏–∑–º–µ–Ω—è—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –≤—Å—Ç—Ä–µ—á–∞–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –ü–æ–º–æ–≥–∞–π—Ç–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã –≤—Ä–µ–º–µ–Ω–∏, –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤—ã–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–æ–ª–∏—Ç–∏–∫–µ –∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞—Ö –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥.",

    "–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –±–ª–æ–≥–æ–≤": "–°–æ–∑–¥–∞–π—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –±–ª–æ–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å, —Å–æ–±–∏—Ä–∞—Ç—å, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–∏—Å–∞—Ç—å –±–ª–æ–≥–∏. –ê–≥–µ–Ω—Ç –ø–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é –±—É–¥–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —Ç–µ–º—É –∏ —Å–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ê–≥–µ–Ω—Ç –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—é –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å –ø—É–Ω–∫—Ç—ã –¥–ª—è –±–ª–æ–≥–∞. –ê–≥–µ–Ω—Ç –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –±—É–¥–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å –ø—É–Ω–∫—Ç—ã –∏ –ø–∏—Å–∞—Ç—å –±–ª–æ–≥. –ë–ª–æ–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1000 —Å–ª–æ–≤.",
}